# Define the tree object
class Node:
  def __init__(self, key):
    self.left = None
    self.right = None
    self.val = key

def insert(root, key):
  if root is None:
    return Node(key)
  else:
    if root.val < key:
      root.right = insert(root.right, key)
    else:
      root.left = insert(root.left, key)
  return root

def inorder(root):
  if root:
    inorder(root.left)
    print(root.val, end=" ")
    inorder(root.right)

def remove(root, key):
  if root is None:
    return root
  
  if key < root.val:
    root.left = remove(root.left, key)
  elif(key > root.val):
    root.right = remove(root.right, key)
  else:
    if root.left is None:
      temp = root.right
      root = None
      return temp
    elif root.right is None:
      temp = root.left
      root = None
      return temp

    temp = minValueNode(root.right)
    root.val = temp.val
    root.right = remove(root.right, temp.val)

  return root

def minValueNode(node):
  current = node
  while(current.left is not None):
    current = current.left
  return current

# Main code
arvore = None

arvore = insert(arvore, 'fone')
arvore = insert(arvore, 'casa')

inorder(arvore) # print the tree
print()

arvore = remove(arvore, 'casa')

inorder(arvore) # print the tree
print()

arvore = remove(arvore, 'fone')

inorder(arvore) # print the tree
print()
